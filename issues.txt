TODO
  - smooth out defender ship movement
  - add shield break levels
  - add user lives and score
  - add game levels
  - change sprite images
  - add animation to sprites

DONE:
  - need to add collision listeners to shield pieces to break that shield piece
  - allow user to fire one bullet at a time

UNRESOLVED
  

RESOLVED
  - Need to find a way to move all of the invader ships at the same time. 
    - Maybe set a local var for vel in 'game.js' or 'ship.js' and set the vel for all
    invader ships to the local vel
    - Or place the images inside a container and move the container
    	- Traversed through this.game.invaderships and called ship.prototype.reverse 
	on each of them. Not efficient, but only 55 ships to traverse so it doesn't matter

  - Bullets do not show on canvas either. Both stars and bullets are defined, 
    is not skipped for any loop, bullets affect the position of the ship. 
    They are definitely somewhere on the DOM, just not visible.
	- Bullets were not being added to Game.allObjects so they weren't being drawn
	on the canvas. In 'Game.prototype.draw', looped through 
	'Game.prototype.getAllobjects' instead of 'Game.allObjects' and bullets were
	rendered onto canvas

  - Stars do not show on background. Skip for now. Not an MVP.
	- Stars weren't being rendered because its ivars were not being set. In the Star 
	constructor function, was setting 'options.color = options.color' and wasn't 
	passing in a value to Star.

  - Was not able to call (object instanceof Ship) because I was requiring Ship inside of
    'moving_object.js'. Not sure why, but it probably has something to do with load order

  - Bullets and Defender ship's positions both seem to be pointing to the same 'pos' var.
  When Bullets position changes, defenders position mirrors, and vice versa
	- In 'Ship.prototype.fireBullet', created bulletX and bulletY axis variables and
	set BulletPos to the new position instead of just setting BulletPos to Ship.pos